{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/christophsj/fundraiser/christophsj.fundraiser.fundraiser/module/types/fundraiser/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/components/ProjectForm.vue?5363","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?0db5","webpack:///./src/App.vue?eabf","webpack:///./src/store/generated/christophsj/fundraiser/christophsj.fundraiser.fundraiser/module/rest.js","webpack:///./src/store/generated/christophsj/fundraiser/christophsj.fundraiser.fundraiser/module/index.js","webpack:///./src/store/generated/christophsj/fundraiser/christophsj.fundraiser.fundraiser/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?4e3d","webpack:///./src/views/Types.vue","webpack:///./src/components/ProjectForm.vue","webpack:///./src/components/ProjectForm.vue?4409","webpack:///./src/components/ProjectList.vue","webpack:///./src/components/ProjectList.vue?1db0","webpack:///./src/views/Types.vue?79a6","webpack:///./src/views/Projects.vue","webpack:///./src/views/Projects.vue?180f","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?deda","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/christophsj/fundraiser/christophsj.fundraiser.fundraiser/module/types/fundraiser/project.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/components/ProjectList.vue?b185","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/christophsj/fundraiser/christophsj.fundraiser.fundraiser/module/types/fundraiser/fund.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseMsgCreateFund","creator","project","amount","MsgCreateFund","baseMsgUpdateFund","id","MsgUpdateFund","baseMsgDeleteFund","MsgDeleteFund","baseMsgCreateProject","title","description","start","goal","MsgCreateProject","baseMsgUpdateProject","MsgUpdateProject","baseMsgDeleteProject","MsgDeleteProject","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryFundAll","method","queryFund","queryProjectAll","queryProject","types","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgCreateFund","msgDeleteProject","msgDeleteFund","msgCreateProject","msgUpdateFund","msgUpdateProject","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","getDefaultState","Fund","FundAll","Project","ProjectAll","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getFund","getFundAll","getProject","getProjectAll","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryFund","options","subscribe","all","SpVuexError","QueryFundAll","pagination","nextKey","next_values","prop","QueryProject","QueryProjectAll","sendMsgCreateFund","msg","sendMsgDeleteProject","sendMsgDeleteFund","sendMsgCreateProject","sendMsgUpdateFund","sendMsgUpdateProject","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","V1Beta1ProposalStatus","V1Beta1VoteOption","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","MsgCreateVestingAccount","msgCreateVestingAccount","V1Order","V1State","sendMsgCreateVestingAccount","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","V1Beta1BondStatus","sendMsgVerifyInvariant","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","ChristophsjFundraiserChristophsjFundraiserFundraiser","load","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkIbcCoreClientV1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","for","placeholder","duration","min","max","disabled","loggedIn","submit","currentAccount","_depsLoaded","methods","alert","formatDate","year","getFullYear","month","getMonth","day","getDate","now","debug","setDate","allFundraisers","fundraiser","fundSum","submitFund","hidden","selected","funds","res","fundraisers","activeFundraisers","submitEvent","elements","x","parseInt","a","b","ProjectForm","ProjectList","routerHistory","createWebHistory","routes","component","Index","Types","Projects","router","createRouter","history","app","createApp","App","config","globalProperties","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseProject","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseFund","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.af753038.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"christophsj.fundraiser.fundraiser\";\nconst baseMsgCreateFund = { creator: \"\", project: \"\", amount: \"\" };\nexport const MsgCreateFund = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.project !== \"\") {\n            writer.uint32(18).string(message.project);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(26).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateFund };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.project = reader.string();\n                    break;\n                case 3:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.project !== undefined && object.project !== null) {\n            message.project = String(object.project);\n        }\n        else {\n            message.project = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.project !== undefined && (obj.project = message.project);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.project !== undefined && object.project !== null) {\n            message.project = object.project;\n        }\n        else {\n            message.project = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateFundResponse = { id: 0 };\nexport const MsgCreateFundResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateFundResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateFundResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateFundResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateFund = {\n    creator: \"\",\n    id: 0,\n    project: \"\",\n    amount: \"\",\n};\nexport const MsgUpdateFund = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.project !== \"\") {\n            writer.uint32(26).string(message.project);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateFund };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.project = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.project !== undefined && object.project !== null) {\n            message.project = String(object.project);\n        }\n        else {\n            message.project = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.project !== undefined && (obj.project = message.project);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.project !== undefined && object.project !== null) {\n            message.project = object.project;\n        }\n        else {\n            message.project = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateFundResponse = {};\nexport const MsgUpdateFundResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateFundResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateFundResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateFundResponse };\n        return message;\n    },\n};\nconst baseMsgDeleteFund = { creator: \"\", id: 0 };\nexport const MsgDeleteFund = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteFund };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteFundResponse = {};\nexport const MsgDeleteFundResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteFundResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteFundResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteFundResponse };\n        return message;\n    },\n};\nconst baseMsgCreateProject = {\n    creator: \"\",\n    title: \"\",\n    description: \"\",\n    start: \"\",\n    end: \"\",\n    goal: \"\",\n};\nexport const MsgCreateProject = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(18).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.start !== \"\") {\n            writer.uint32(34).string(message.start);\n        }\n        if (message.end !== \"\") {\n            writer.uint32(42).string(message.end);\n        }\n        if (message.goal !== \"\") {\n            writer.uint32(50).string(message.goal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateProject };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.title = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.start = reader.string();\n                    break;\n                case 5:\n                    message.end = reader.string();\n                    break;\n                case 6:\n                    message.goal = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.start !== undefined && object.start !== null) {\n            message.start = String(object.start);\n        }\n        else {\n            message.start = \"\";\n        }\n        if (object.end !== undefined && object.end !== null) {\n            message.end = String(object.end);\n        }\n        else {\n            message.end = \"\";\n        }\n        if (object.goal !== undefined && object.goal !== null) {\n            message.goal = String(object.goal);\n        }\n        else {\n            message.goal = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.start !== undefined && (obj.start = message.start);\n        message.end !== undefined && (obj.end = message.end);\n        message.goal !== undefined && (obj.goal = message.goal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.start !== undefined && object.start !== null) {\n            message.start = object.start;\n        }\n        else {\n            message.start = \"\";\n        }\n        if (object.end !== undefined && object.end !== null) {\n            message.end = object.end;\n        }\n        else {\n            message.end = \"\";\n        }\n        if (object.goal !== undefined && object.goal !== null) {\n            message.goal = object.goal;\n        }\n        else {\n            message.goal = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateProjectResponse = { id: 0 };\nexport const MsgCreateProjectResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateProjectResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateProjectResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateProjectResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateProject = {\n    creator: \"\",\n    id: 0,\n    title: \"\",\n    description: \"\",\n    start: \"\",\n    end: \"\",\n    goal: \"\",\n};\nexport const MsgUpdateProject = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(34).string(message.description);\n        }\n        if (message.start !== \"\") {\n            writer.uint32(42).string(message.start);\n        }\n        if (message.end !== \"\") {\n            writer.uint32(50).string(message.end);\n        }\n        if (message.goal !== \"\") {\n            writer.uint32(58).string(message.goal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateProject };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.description = reader.string();\n                    break;\n                case 5:\n                    message.start = reader.string();\n                    break;\n                case 6:\n                    message.end = reader.string();\n                    break;\n                case 7:\n                    message.goal = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.start !== undefined && object.start !== null) {\n            message.start = String(object.start);\n        }\n        else {\n            message.start = \"\";\n        }\n        if (object.end !== undefined && object.end !== null) {\n            message.end = String(object.end);\n        }\n        else {\n            message.end = \"\";\n        }\n        if (object.goal !== undefined && object.goal !== null) {\n            message.goal = String(object.goal);\n        }\n        else {\n            message.goal = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.start !== undefined && (obj.start = message.start);\n        message.end !== undefined && (obj.end = message.end);\n        message.goal !== undefined && (obj.goal = message.goal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.start !== undefined && object.start !== null) {\n            message.start = object.start;\n        }\n        else {\n            message.start = \"\";\n        }\n        if (object.end !== undefined && object.end !== null) {\n            message.end = object.end;\n        }\n        else {\n            message.end = \"\";\n        }\n        if (object.goal !== undefined && object.goal !== null) {\n            message.goal = object.goal;\n        }\n        else {\n            message.goal = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateProjectResponse = {};\nexport const MsgUpdateProjectResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateProjectResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateProjectResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateProjectResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteProject = { creator: \"\", id: 0 };\nexport const MsgDeleteProject = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteProject };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteProjectResponse = {};\nexport const MsgDeleteProjectResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteProjectResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteProjectResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteProjectResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateFund(request) {\n        const data = MsgCreateFund.encode(request).finish();\n        const promise = this.rpc.request(\"christophsj.fundraiser.fundraiser.Msg\", \"CreateFund\", data);\n        return promise.then((data) => MsgCreateFundResponse.decode(new Reader(data)));\n    }\n    UpdateFund(request) {\n        const data = MsgUpdateFund.encode(request).finish();\n        const promise = this.rpc.request(\"christophsj.fundraiser.fundraiser.Msg\", \"UpdateFund\", data);\n        return promise.then((data) => MsgUpdateFundResponse.decode(new Reader(data)));\n    }\n    DeleteFund(request) {\n        const data = MsgDeleteFund.encode(request).finish();\n        const promise = this.rpc.request(\"christophsj.fundraiser.fundraiser.Msg\", \"DeleteFund\", data);\n        return promise.then((data) => MsgDeleteFundResponse.decode(new Reader(data)));\n    }\n    CreateProject(request) {\n        const data = MsgCreateProject.encode(request).finish();\n        const promise = this.rpc.request(\"christophsj.fundraiser.fundraiser.Msg\", \"CreateProject\", data);\n        return promise.then((data) => MsgCreateProjectResponse.decode(new Reader(data)));\n    }\n    UpdateProject(request) {\n        const data = MsgUpdateProject.encode(request).finish();\n        const promise = this.rpc.request(\"christophsj.fundraiser.fundraiser.Msg\", \"UpdateProject\", data);\n        return promise.then((data) => MsgUpdateProjectResponse.decode(new Reader(data)));\n    }\n    DeleteProject(request) {\n        const data = MsgDeleteProject.encode(request).finish();\n        const promise = this.rpc.request(\"christophsj.fundraiser.fundraiser.Msg\", \"DeleteProject\", data);\n        return promise.then((data) => MsgDeleteProjectResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ProjectForm.vue?vue&type=style&index=0&id=3d77949e&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/projects\" text=\"Projects\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=0edfd52c\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/fundraiser/fundraiser/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\n\nimport exportComponent from \"/home/runner/work/fundraiser/fundraiser/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title fundraiser/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryFundAll\n         * @request GET:/christophsj/fundraiser/fundraiser/fund\n         */\n        this.queryFundAll = (query, params = {}) => this.request({\n            path: `/christophsj/fundraiser/fundraiser/fund`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryFund\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/christophsj/fundraiser/fundraiser/fund/{id}\n         */\n        this.queryFund = (id, params = {}) => this.request({\n            path: `/christophsj/fundraiser/fundraiser/fund/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProjectAll\n         * @request GET:/christophsj/fundraiser/fundraiser/project\n         */\n        this.queryProjectAll = (query, params = {}) => this.request({\n            path: `/christophsj/fundraiser/fundraiser/project`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProject\n         * @request GET:/christophsj/fundraiser/fundraiser/project/{id}\n         */\n        this.queryProject = (id, params = {}) => this.request({\n            path: `/christophsj/fundraiser/fundraiser/project/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateFund } from \"./types/fundraiser/tx\";\nimport { MsgDeleteProject } from \"./types/fundraiser/tx\";\nimport { MsgDeleteFund } from \"./types/fundraiser/tx\";\nimport { MsgCreateProject } from \"./types/fundraiser/tx\";\nimport { MsgUpdateFund } from \"./types/fundraiser/tx\";\nimport { MsgUpdateProject } from \"./types/fundraiser/tx\";\nconst types = [\n    [\"/christophsj.fundraiser.fundraiser.MsgCreateFund\", MsgCreateFund],\n    [\"/christophsj.fundraiser.fundraiser.MsgDeleteProject\", MsgDeleteProject],\n    [\"/christophsj.fundraiser.fundraiser.MsgDeleteFund\", MsgDeleteFund],\n    [\"/christophsj.fundraiser.fundraiser.MsgCreateProject\", MsgCreateProject],\n    [\"/christophsj.fundraiser.fundraiser.MsgUpdateFund\", MsgUpdateFund],\n    [\"/christophsj.fundraiser.fundraiser.MsgUpdateProject\", MsgUpdateProject],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateFund: (data) => ({ typeUrl: \"/christophsj.fundraiser.fundraiser.MsgCreateFund\", value: data }),\n        msgDeleteProject: (data) => ({ typeUrl: \"/christophsj.fundraiser.fundraiser.MsgDeleteProject\", value: data }),\n        msgDeleteFund: (data) => ({ typeUrl: \"/christophsj.fundraiser.fundraiser.MsgDeleteFund\", value: data }),\n        msgCreateProject: (data) => ({ typeUrl: \"/christophsj.fundraiser.fundraiser.MsgCreateProject\", value: data }),\n        msgUpdateFund: (data) => ({ typeUrl: \"/christophsj.fundraiser.fundraiser.MsgUpdateFund\", value: data }),\n        msgUpdateProject: (data) => ({ typeUrl: \"/christophsj.fundraiser.fundraiser.MsgUpdateProject\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Fund } from \"./module/types/fundraiser/fund\";\nimport { Project } from \"./module/types/fundraiser/project\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Fund: {},\n        FundAll: {},\n        Project: {},\n        ProjectAll: {},\n        _Structure: {\n            Fund: getStructure(Fund.fromPartial({})),\n            Project: getStructure(Project.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getFund: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Fund[JSON.stringify(params)] ?? {};\n        },\n        getFundAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.FundAll[JSON.stringify(params)] ?? {};\n        },\n        getProject: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Project[JSON.stringify(params)] ?? {};\n        },\n        getProjectAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ProjectAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryFund({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryFund(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryFund(key.id)).data;\n                commit('QUERY', { query: 'Fund', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryFund', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getFund']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryFund', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryFundAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryFundAll(query)).data : (await (await initQueryClient(rootGetters)).queryFundAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryFundAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'FundAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryFundAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getFundAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryFundAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProject({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProject(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryProject(key.id)).data;\n                commit('QUERY', { query: 'Project', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProject', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProject']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProject', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProjectAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProjectAll(query)).data : (await (await initQueryClient(rootGetters)).queryProjectAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProjectAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ProjectAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProjectAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProjectAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProjectAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgCreateFund({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateFund(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateFund:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateFund:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteProject({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteProject(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteProject:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteProject:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteFund({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteFund(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteFund:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteFund:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateProject({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateProject(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateProject:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateProject:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateFund({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateFund(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateFund:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateFund:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateProject({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateProject(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateProject:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateProject:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateFund({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateFund(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateFund:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateFund:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteProject({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteProject(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteProject:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteProject:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteFund({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteFund(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteFund:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteFund:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateProject({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateProject(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateProject:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateProject:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateFund({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateFund(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateFund:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateFund:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateProject({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateProject(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateProject:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateProject:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ChristophsjFundraiserChristophsjFundraiserFundraiser from './christophsj/fundraiser/christophsj.fundraiser.fundraiser';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nexport default {\n    ChristophsjFundraiserChristophsjFundraiserFundraiser: load(ChristophsjFundraiserChristophsjFundraiserFundraiser, 'christophsj.fundraiser.fundraiser'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/fundraiser/fundraiser/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"christophsj.fundraiser.fundraiser\" moduleType=\"Fund\"  />\n\t\t<SpType modulePath=\"christophsj.fundraiser.fundraiser\" moduleType=\"Project\"  />  \n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport ProjectForm from \"../components/ProjectForm\";\nimport ProjectList from \"../components/ProjectList\";\nexport default {\n\tname: 'Types',\n\tcomponents: {ProjectForm, ProjectList},\n}\n</script>","<template>\n    <div class=\"sp-box sp-shadow sp-form-group column\">\n      <form class=\"sp-voter__main__form\">\n        <div class=\"sp-box-header\">Create a Project</div>\n\n        <label for=\"input-title\">Title</label>\n        <input\n          class=\"sp-input\"\n          placeholder=\"Enter Title\"\n          v-model=\"title\"\n          id=\"input-title\"\n        />\n\n        <label for=\"input-description\">Description</label>\n        <input\n          class=\"sp-input\"\n          placeholder=\"Enter Description\"\n          v-model=\"description\"\n          id=\"input-description\"\n        />\n\n        <label for=\"input-end\">Duration (in days)</label>\n        <input\n          type=\"number\"\n          class=\"sp-input\"\n          placeholder=\"number of days\"\n          v-model=\"duration\"\n          id=\"input-duration\"\n          min=\"1\"\n          max=\"90\"\n        />\n\n        <label for=\"input-goal\">Goal (number of tokens)</label>\n        <input\n          type=\"number\"\n          class=\"sp-input\"\n          placeholder=\"Enter number of tokens\"\n          v-model=\"goal\"\n          id=\"input-goal\"\n        />\n        <sp-button :disabled=\"!loggedIn\" @click=\"submit\">Create Project</sp-button>\n        <div><strong v-if=\"!loggedIn\">Please access a wallet to create a Project</strong></div>\n      </form>\n    </div>\n</template>\n\n<style>\nlabel {\n  font-weight: bold;\n  display: block;\n  margin: 4px;\n}\n</style>\n\n<script>\nexport default {\n  name: \"FundraiserForm\",\n  data() {\n    return {\n      title: \"\",\n      description: \"\",\n      duration: 30,\n      goal: 0,\n    };\n  },\n  computed: {\n    currentAccount() {\n      if (this._depsLoaded) {\n        if (this.loggedIn) {\n          return this.$store.getters[\"common/wallet/address\"];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    loggedIn() {\n      if (this._depsLoaded) {\n        return this.$store.getters[\"common/wallet/loggedIn\"];\n      } else {\n        return false;\n      }\n    },\n  },\n  methods: {\n    async submit() {\n      \n      if(this.goal <= 0) {\n        alert(\"Goal must be > 0!\");\n        return;\n      }\n\n      const formatDate = (d) => {\n        const year = d.getFullYear();\n        const month = d.getMonth() + 1;\n        const day = d.getDate();\n\n        // YYYY-MM-DD\n        return `${year}-${month < 10 ? `0${month}` : month}-${day < 10 ? `0${day}` : day}`;\n      }\n\n      const now = new Date();\n      console.debug(`Now: ${now}`);\n      const start = formatDate(now);\n      now.setDate(now.getDate() + this.duration);\n      console.debug(`Now + ${this.duration}: ${now}`);\n      const end = formatDate(now);\n      const value = {\n        creator: this.currentAccount,\n        title: this.title,\n        description: this.description,\n        start: start,\n        end: end,\n        goal: `${this.goal}token`,\n      };\n      console.debug(`Submit ${JSON.stringify(value)}`)\n      await this.$store.dispatch(\n        \"christophsj.fundraiser.fundraiser/sendMsgCreateProject\",\n        {\n          value,\n          fee: [],\n        }\n      );\n    },\n  },\n};\n</script>\n","import { render } from \"./ProjectForm.vue?vue&type=template&id=3d77949e\"\nimport script from \"./ProjectForm.vue?vue&type=script&lang=js\"\nexport * from \"./ProjectForm.vue?vue&type=script&lang=js\"\n\nimport \"./ProjectForm.vue?vue&type=style&index=0&id=3d77949e&lang=css\"\n\nimport exportComponent from \"/home/runner/work/fundraiser/fundraiser/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"sp-box sp-shadow column\">\n    <h2 class=\"sp-box-header\">PROJECTS</h2>\n    <div\n      v-for=\"fundraiser in allFundraisers\"\n      v-bind:key=\"'fundraiser' + fundraiser.id\"\n    >\n      <SpH3> {{ fundraiser.title }} (ID: {{ fundraiser.id }}) </SpH3>\n      <div class=\"sp-dashed-line\" />\n      <label for=\"description\"><strong>Description:</strong></label>\n      <div id=\"description\">{{ fundraiser.description }}</div>\n      <label for=\"start\"><strong> Started at: </strong></label>\n      <div id=\"start\">{{ fundraiser.start }}</div>\n      <label for=\"end\"><strong>Deadline: </strong></label>\n      <div id=\"end\">{{ fundraiser.end }}</div>\n      <label for=\"goal\"><strong>Goal status: </strong></label>\n      <div id=\"goal\">{{ fundSum(fundraiser.id) }} / {{ fundraiser.goal }} </div>\n\n      <form @submit.prevent=\"submitFund\">\n        <div class=\"subtitle\"><strong>Fund Me!</strong></div>\n        <input\n          class=\"small-input sp-input\"\n          placeholder=\"Enter Amount\"\n          id=\"input-amount\"\n          name=\"amount\"\n        />\n        <input\n          hidden\n          disabled\n          name=\"id\"\n          :value=\"fundraiser.id\"\n          type=\"number\"\n        />\n        <button :disabled=\"!loggedIn\" class=\"sp-button\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<style>\nform {\n  margin-top: 20px;\n}\n.subtitle {\n  margin-bottom: 6px;\n}\n.small-input {\n  width: 140px;\n}\n</style>\n\n<script>\nexport default {\n  data() {\n    return {\n      selected: \"\",\n    };\n  },\n  computed: {\n    currentAccount() {\n      if (this._depsLoaded) {\n        if (this.loggedIn) {\n          return this.$store.getters[\"common/wallet/address\"];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    funds() {\n      return (\n        this.$store.getters[\"christophsj.fundraiser.fundraiser/getFundAll\"]({\n          params: {},\n        })?.Fund ?? []\n      );\n    },\n    loggedIn() {\n      if (this._depsLoaded) {\n        return this.$store.getters[\"common/wallet/loggedIn\"];\n      } else {\n        return false;\n      }\n    },\n\n    allFundraisers() {\n      let res = this.$store.getters[\n        \"christophsj.fundraiser.fundraiser/getProjectAll\"\n      ]({\n        params: {},\n      });\n      let fundraisers = res?.Project;\n      if (fundraisers == null) return [];\n      return fundraisers;\n    },\n    \n    activeFundraisers() {\n      var fundraisers = this.allFundraisers();\n\n      // TODO: only active fundraisers\n      return fundraisers;\n    },\n  },\n  methods: {\n    async submitFund(submitEvent) {\n      let amount = submitEvent.target.elements.amount.value;\n      let id = submitEvent.target.elements.id.value;\n      await this.submit(id, `${amount}token`)\n    },\n    fundSum(id) {\n      return this.funds.filter((x) => x.project == id).map(x => parseInt(x.amount.split(\"token\"))).reduce((a, b) => a + b, 0);\n    },\n    async submit(project, amount) {\n      const value = { creator: this.currentAccount, project, amount };\n      console.log(await this.$store.dispatch(\n        \"christophsj.fundraiser.fundraiser/sendMsgCreateFund\",\n        {\n          value,\n          fee: [],\n        }\n      ));\n    },\n  },\n};\n</script>","import { render } from \"./ProjectList.vue?vue&type=template&id=0eae7bb4\"\nimport script from \"./ProjectList.vue?vue&type=script&lang=js\"\nexport * from \"./ProjectList.vue?vue&type=script&lang=js\"\n\nimport \"./ProjectList.vue?vue&type=style&index=0&id=0eae7bb4&lang=css\"\n\nimport exportComponent from \"/home/runner/work/fundraiser/fundraiser/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Types.vue?vue&type=template&id=168951a0\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/fundraiser/fundraiser/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n        <project-form />\n        <project-list />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport ProjectForm from \"../components/ProjectForm\";\nimport ProjectList from \"../components/ProjectList\";\nexport default {\n\tname: 'Projects',\n\tcomponents: {ProjectForm, ProjectList},\n}\n</script>\n\n","import { render } from \"./Projects.vue?vue&type=template&id=7d1c20ba\"\nimport script from \"./Projects.vue?vue&type=script&lang=js\"\nexport * from \"./Projects.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/fundraiser/fundraiser/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Projects from '@/views/Projects.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/projects', component: Projects }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"christophsj.fundraiser.fundraiser\";\nconst baseProject = {\n    creator: \"\",\n    id: 0,\n    title: \"\",\n    description: \"\",\n    start: \"\",\n    end: \"\",\n    goal: \"\",\n};\nexport const Project = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(34).string(message.description);\n        }\n        if (message.start !== \"\") {\n            writer.uint32(42).string(message.start);\n        }\n        if (message.end !== \"\") {\n            writer.uint32(50).string(message.end);\n        }\n        if (message.goal !== \"\") {\n            writer.uint32(58).string(message.goal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProject };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.description = reader.string();\n                    break;\n                case 5:\n                    message.start = reader.string();\n                    break;\n                case 6:\n                    message.end = reader.string();\n                    break;\n                case 7:\n                    message.goal = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.start !== undefined && object.start !== null) {\n            message.start = String(object.start);\n        }\n        else {\n            message.start = \"\";\n        }\n        if (object.end !== undefined && object.end !== null) {\n            message.end = String(object.end);\n        }\n        else {\n            message.end = \"\";\n        }\n        if (object.goal !== undefined && object.goal !== null) {\n            message.goal = String(object.goal);\n        }\n        else {\n            message.goal = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.start !== undefined && (obj.start = message.start);\n        message.end !== undefined && (obj.end = message.end);\n        message.goal !== undefined && (obj.goal = message.goal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProject };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.start !== undefined && object.start !== null) {\n            message.start = object.start;\n        }\n        else {\n            message.start = \"\";\n        }\n        if (object.end !== undefined && object.end !== null) {\n            message.end = object.end;\n        }\n        else {\n            message.end = \"\";\n        }\n        if (object.goal !== undefined && object.goal !== null) {\n            message.goal = object.goal;\n        }\n        else {\n            message.goal = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ProjectList.vue?vue&type=style&index=0&id=0eae7bb4&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"christophsj.fundraiser.fundraiser\";\nconst baseFund = { creator: \"\", id: 0, project: \"\", amount: \"\" };\nexport const Fund = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.project !== \"\") {\n            writer.uint32(26).string(message.project);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFund };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.project = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.project !== undefined && object.project !== null) {\n            message.project = String(object.project);\n        }\n        else {\n            message.project = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.project !== undefined && (obj.project = message.project);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFund };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.project !== undefined && object.project !== null) {\n            message.project = object.project;\n        }\n        else {\n            message.project = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}